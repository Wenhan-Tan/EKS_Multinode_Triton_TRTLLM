apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: trtllm-inference-cluster
  region: us-east-1
  version: "1.30"

vpc:
  id: $PLACEHOLDER_VPC_ID
  subnets:
    private:
      us-east-1a:
        id: $PLACEHOLDER_SUBNET_PRIVATE_1
      us-east-1b:
        id: $PLACEHOLDER_SUBNET_PRIVATE_2
    public:
      us-east-1a:
        id: $PLACEHOLDER_SUBNET_PUBLIC_1
      us-east-1b:
        id: $PLACEHOLDER_SUBNET_PUBLIC_2
  clusterEndpoints:
    privateAccess: true
    publicAccess: true
      
cloudwatch:
  clusterLogging:
    enableTypes: ["*"]  

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: trtllm-service-account
      attachPolicyARNs:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"

addons:
  - name: vpc-cni
    version: 1.18.1-eksbuild.1
    configurationValues: '{"env":{"ENABLE_PREFIX_DELEGATION":"true", "ENABLE_POD_ENI":"true", "POD_SECURITY_GROUP_ENFORCING_MODE":"standard"},"enableNetworkPolicy": "true"}'
    resolveConflicts: overwrite      
  - name: amazon-cloudwatch-observability
    version: v1.6.0-eksbuild.1
            
managedNodeGroups:
  - name: cpu-node-group
    instanceType: c5.2xlarge
    minSize: 0
    desiredCapacity: 0
    maxSize: 1
    iam:
      withAddonPolicies:
        imageBuilder: true
        autoScaler: true
        ebs: true
        efs: true
        awsLoadBalancerController: true
        cloudWatch: true
        albIngress: true
  - name: gpu-compute-node-group
    instanceType: $INSTANCE_TYPE
    instancePrefix: trtllm-compute-node 
    privateNetworking: true
    efaEnabled: true
    minSize: 0
    desiredCapacity: 0
    maxSize: 4
    volumeSize: 500
    # Uncomment capacityReservation if you need it
    # capacityReservation:
    #   capacityReservationTarget:
    #     capacityReservationID: "cr-xxxxxxxxxxxxxx"
    iam:
      withAddonPolicies:
        imageBuilder: true
        autoScaler: true
        ebs: true
        efs: true
        awsLoadBalancerController: true
        cloudWatch: true
        albIngress: true
        externalDNS: true
        certManager: true
        autoScaler: true
